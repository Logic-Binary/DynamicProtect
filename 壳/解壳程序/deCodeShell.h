#pragma once
#include<iostream>
#include<tchar.h>
#include<Windows.h>
#include<psapi.h>


extern LPVOID buf;
extern LPVOID imageBuf;

//*************************************
//获取加密程序数据到buf中 返回值是被加密的PE文件大小
DWORD GetDeCode();
//*************************************

//*************************************
//解密PE文件到buf中
VOID deCode(DWORD srcSize);
//*************************************

//*************************************
//以挂起的方式创建进程
VOID SusCreateProcess();
//*************************************

//*************************************
//获取sizeofimage
DWORD getSizeOfImage();
//*************************************

//*************************************
//将PE文件拉伸 
//参数一是镜像大小
BOOL fileBufferToImageBuffer(DWORD imageSize);
//*************************************

//*************************************
//获取对齐后的值
//参数一对齐前的地址 参数二对齐粒度 返回值为对齐后的值
DWORD Align(DWORD address, DWORD ratio);
//*************************************

//*************************************
//修复重定位
//参数一为PE文件要装载的位置
BOOL fixReloc(DWORD address);
//*************************************

//*************************************
//RVA转FOA 
//参数1基址，参数二RVA
DWORD RVA2FOA(LPVOID buf, LPVOID RVA);
//*************************************

//*************************************
//填充IAT表 
//返回值为修复完毕后的OEP的RVA
DWORD fillIAT();
//*************************************

//*************************************
//枚举进程查找基址
//参数为要查找的进程ID
//返回值为CreateProcess的基址
//未启用！！！
DWORD enumProcess(HANDLE hProcess);
//*************************************

//*************************************
//wulalalla函数
//花指令，混淆，SEH检测硬件断点
void wulalalla();
//*************************************

//************************************* 已废弃
//在新程序开辟一段空间 放入原本的代码段
//参数1为新程序的句柄 
BOOL CCTextSection(HANDLE hProcess);
//*************************************
















//*************************************
//检测虚拟机 
BOOL IsInsideVMWare();
//*************************************

